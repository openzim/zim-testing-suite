name: On-Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+-[0-9a-zA-Z]+'

permissions:
  contents: write

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get release version from tag
        if: env.VERSION == ''
        run: |
          # Get the version without the `v` prefix
          tag=${{ github.ref_name }}
          echo "VERSION=${tag:1}" >> $GITHUB_ENV
      - name: Show the version
        run: |
          echo "Version is: $VERSION"
      - name: Create Github release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v$VERSION --draft --verify-tag --title v$VERSION
    outputs:
      version: ${{ env.VERSION }}

  create-archive:
    name: create-archive
    needs: ['create-release']
    runs-on: ubuntu-latest
    strategy:
      matrix:
        format: [zip, tar.gz]
    steps:
      - uses: actions/checkout@v4
      - name: Create archive
        shell: bash
        env:
          format: ${{ matrix.format }}
        run: |
          version="${{ needs.create-release.outputs.version }}"
          archive_name="zim-testing-suite-${version}"          
          git archive --prefix="${archive_name}/" --output ${archive_name}.${{ env.format }} v${version}:data/

      - name: Upload archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          format: ${{ matrix.format }}
        run: |
          version="${{ needs.create-release.outputs.version }}"
          archive="zim-testing-suite-${version}.${{ env.format }}"
          gh release upload "v$version" $archive
